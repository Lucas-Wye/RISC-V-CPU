//Initialization
000000000000_00000_000_00100_0010011    // PC = 0 	addi $a0, $x0, 0	   a0 = 0 // address
000000000000_00000_000_01000_0010011    // PC = 4	addi $t0, $x0, 0	   t0 = 0 // fixed 0
000000000001_00000_000_01001_0010011    // PC = 8	addi $t1, $x0, 1	   t1 = 1 // fixed 1
000000000000_00000_000_10001_0010011    // PC = 12	addi $s1, $x0, 0	   s1 = 0
000000000001_00000_000_10010_0010011    // PC = 16	addi $s2, $x0, 1	   s2 = 1

//Load number n from data memory
000000000000_00100_010_10000_0000011    // PC = 20	lw $s0, 0($a0)         load mem[a0] to s0
000000000000_10000_000_10100_0010011    // PC = 24	addi $s4, $s0, 0	   s4 = s0

//Calculate the Fibonacci Number
//loop:
0100000_01001_10000_000_10000_0110011   // PC = 28	sub $s0, $s0, $t1      s0 = s0 - 1
0000000_10010_10001_000_10001_0110011   // PC = 32	add $s1, $s1, $s2      s1 = s1 + s2
000000000000_10010_000_10011_0010011    // PC = 36	addi $s3, $s2, 0  	   s3 = s2 // swap(s1, s2) 
000000000000_10001_000_10010_0010011    // PC = 40	addi $s2, $s1, 0	   s2 = s1 //
000000000000_10011_000_10001_0010011    // PC = 44 	addi $s1, $s3, 0	   s1 = s3 // 
0000000_01000_10000_000_01000_1100011   // PC = 48 	beq $s0, $t0, finish   s0 == t0, finish
1111111_00000_00000_000_01001_1100011   // PC = 52	beq $0, $0, loop       goto loop

//Store the result
//finish:
0000000_10001_00100_010_00100_0100011   // PC = 56	sw $s1, 4($a0)	       save s1 to mem[a0+4]

//Calculate the input and output and store

0000000_00000_10001_111_01010_0110011   // PC = 60	and $t2, $s1, $x0      t2 = s1 & x0 = 0
0000000_00000_10001_110_01011_0110011   // PC = 64	or $t3, $s1, $x0       t3 = s1 | x0 = s1
0000000_01100_10001_000_01100_0110011   // PC = 68	add $t4, $s1, $t4      t4 = s1 + t4
0100000_01100_10001_000_01101_0110011   // PC = 72	sub $t5, $s1, $t4      t5 = s1 - t4
0000001_01100_10001_000_01110_0110011   // PC = 76	mul $t6, $s1, $t4      t6 = s1 * t4
0000000_01010_00100_010_01000_0100011   // PC = 80	sw $t2, 8($a0)         save t2 to mem[a0+8]
0000000_01011_00100_010_01100_0100011   // PC = 84	sw $t3, 12($a0)        save t3 to mem[a0+12]
0000000_01100_00100_010_10000_0100011   // PC = 88	sw $t4, 16($a0)        save t4 to mem[a0+16]
0000000_01101_00100_010_10100_0100011   // PC = 92	sw $t5, 20($a0)        save t5 to mem[a0+20]
0000000_01110_00100_010_11000_0100011   // PC = 96	sw $t6, 24($a0)        save t6 to mem[a0+24]

